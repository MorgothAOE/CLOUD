{
  "swagger": "2.0",
  "info": {
    "title": "Access API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/login": {
      "post": {
        "description": "Otorga acceso a un usuario registrado",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Datos de usuario",
            "in": "body",
            "description": "Datos JSON para la api",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": " 'login':True "
          },
          "400 1": {
            "description": " 'error':'Parámetros inválidos' "
          },
          "400 2": {
            "description": " 'error':'No existe el usuario' "
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "description": "Cierre de sesion del usuario logeado",
        "produces": [
          "application/json"
        ],          
        "responses": {
          "200": {
            "description": " 'logout': True"
          }
        }
      }
    },
    "/api/order": {
      "get": {
        "description": "Lista todas las órdenes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Devuelve una lista de todas las órdenes"
          }
        }
      }
    },
    "/api/order/material/{material_id}": {
      "get": {
        "description": "Lista las órdenes de un material específico por su ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "material_id",
            "in": "path",
            "description": "ID del material",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Devuelve una lista de órdenes para el material"
          },
          "404": {
            "description": "No se encontraron órdenes para el material especificado"
          }
        }
      }
    },
    "/api/order/material/name/{material_name}": {
      "get": {
        "description": "Lista las órdenes de un material específico por su nombre",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "material_name",
            "in": "path",
            "description": "Nombre del material",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Devuelve una lista de órdenes para el material"
          },
          "404": {
            "description": "No se encontraron órdenes para el material especificado"
          }
        }
      }
    },
    "/api/order/{order_id}/delivered": {
      "put": {
        "description": "Marca una orden como entregada si no lo está ya",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "ID de la orden",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "La orden fue marcada como entregada correctamente"
          },
          "400": {
            "description": "La orden no existe o ya fue entregada"
          }
        }
      }
    },
    "/api/order/{order_id}/reserve": {
      "post": {
        "description": "Asigna un provider a una orden si no ha sido reservada ya",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "ID de la orden a reservar",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "La orden fue reservada correctamente"
          },
          "400": {
            "description": "La orden ya ha sido reservada"
          },
          "403": {
            "description": "No tienes permisos para reservar la orden"
          },
          "404": {
            "description": "La orden no existe"
          }
        }
      }
    },
    "/api/order/material/register/{material_id}": {
      "post": {
        "description": "Registra un proveedor para un material dado",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "material_id",
            "in": "path",
            "description": "ID del material al cual registrarse",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "Se registró correctamente para el material especificado"
          },
          "403": {
            "description": "No tienes permisos para reservar la orden"
          },
          "404": {
            "description": "No se encontró el material"
          }
        }
      }
    },
    "/api/db/reset": {
      "post": {
        "description": "Resetear la base de datos. Elimina las tuplas y crea las tablas.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Database reset successful"
          },
          "400": {
            "description": "Database reset failed"
          }
        }
      }
    },
    "/api/db/seeds": {
      "post": {
        "description": "Reepoblar la base de datos con datos de prueba.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Seeding database successful"
          },
          "400": {
            "description": "Database seeding failed"
          }
        }
      }
    }
  },
  "definitions": {
    "LoginData": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}
